name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        type: string

env:
  GO_VERSION: "1.24"

jobs:
  # ================================================================================================
  # VALIDATE RELEASE
  # ================================================================================================
  
  validate-and-release:
    name: Validate and Release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
      
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0
          
      - name: Get tag
        id: tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
          
      - name: Validate tag
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          if [[ ! $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid tag format: $TAG"
            echo "Expected: vX.Y.Z"
            exit 1
          fi
          echo "Valid release tag: $TAG"
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Validate and build
        run: |
          make deps
          make verify
          
      - name: Generate changelog
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          
          echo "## What's Changed in $TAG" > changelog.md
          echo "" >> changelog.md
          
          # Get commits since last tag
          LAST_TAG=$(git tag --sort=-version:refname | head -2 | tail -1)
          if [ -n "$LAST_TAG" ] && [ "$LAST_TAG" != "$TAG" ]; then
            echo "### Commits since $LAST_TAG:" >> changelog.md
            git log --pretty=format:"- %s (%h)" $LAST_TAG..$TAG >> changelog.md
          else
            echo "### Initial release" >> changelog.md
            git log --pretty=format:"- %s (%h)" >> changelog.md
          fi
          
          echo "" >> changelog.md
          echo "### Installation" >> changelog.md
          echo "\`\`\`bash" >> changelog.md
          echo "go get github.com/kaptinlin/messageformat-go@$TAG" >> changelog.md
          echo "\`\`\`" >> changelog.md
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ steps.tag.outputs.tag }}
          body_path: changelog.md
          draft: false
          prerelease: false
          generate_release_notes: true
          
      - name: Release Summary
        run: |
          echo "## ðŸš€ Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tag**: ${{ steps.tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Release created successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Installation:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "go get github.com/kaptinlin/messageformat-go@${{ steps.tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY